name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

env:
  NODE_ENV: test

jobs:
  build-test:
    name: Lint / Test / Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
        python-version: [3.11, 3.12]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then npm ci; fi
          if [ -f pyproject.toml ]; then pip install -e .[dev] || pip install -r requirements.txt; fi
          if [ -f go.mod ]; then go mod download; fi
          # Install requests for Python scripts
          pip install requests || true

      - name: Lint
        run: |
          if [ -f package.json ] && npm run | grep -q "lint"; then npm run lint; else echo "No lint script"; fi

      - name: Test
        run: |
          if [ -f package.json ] && npm test --help >/dev/null 2>&1; then npm test -- --ci; \
          elif [ -f pyproject.toml ]; then pytest -q; \
          elif [ -f go.mod ]; then go test ./...; \
          elif [ -f test_events.py ]; then python -m unittest test_events.py -v; \
          else echo "No tests defined"; fi

      - name: Build
        run: |
          if [ -f package.json ] && npm run | grep -q "build"; then npm run build; else echo "No build step"; fi

      - name: Capture artifact (optional build output)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.node-version }}-py${{ matrix.python-version }}
          path: |
            dist
            build
          if-no-files-found: ignore