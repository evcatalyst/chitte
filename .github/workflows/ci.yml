name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

env:
  NODE_ENV: test

jobs:
  build-test:
    name: Lint / Test / Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      # Use cache only if a supported lock file exists
      - name: Setup Node (with cache)
        if: hashFiles('package-lock.json') != '' || hashFiles('npm-shrinkwrap.json') != '' || hashFiles('yarn.lock') != '' || hashFiles('pnpm-lock.yaml') != ''
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Setup Node (no cache)
        if: hashFiles('package-lock.json') == '' && hashFiles('npm-shrinkwrap.json') == '' && hashFiles('yarn.lock') == '' && hashFiles('pnpm-lock.yaml') == ''
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "pm=pnpm" >> $GITHUB_OUTPUT; \
          elif [ -f yarn.lock ]; then echo "pm=yarn" >> $GITHUB_OUTPUT; \
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then echo "pm=npm" >> $GITHUB_OUTPUT; \
          elif [ -f package.json ]; then echo "pm=npm-nolock" >> $GITHUB_OUTPUT; \
          else echo "pm=none" >> $GITHUB_OUTPUT; fi

      - name: Install dependencies
        run: |
          case "${{ steps.pm.outputs.pm }}" in
            pnpm) corepack enable && pnpm install --frozen-lockfile ;;
            yarn) corepack enable && yarn install --frozen-lockfile ;;
            npm)  npm ci ;;
            npm-nolock)
                echo "No lock file detected. Installing with 'npm install' (non-deterministic).";
                npm install ;;
            none) echo "No JavaScript project detected; skipping install." ;;
          esac

      - name: (Optional) Create lock file for future determinism
        if: steps.pm.outputs.pm == 'npm-nolock'
        run: |
          npm install --package-lock-only
          echo "Created package-lock.json (consider committing it)."

      - name: Lint
        run: |
          if [ -f package.json ] && node -e "process.exit(require('./package.json').scripts?.lint?0:1)" 2>/dev/null; then
            echo "Running lint..."
            npm run lint || (echo "Lint failed" && exit 1)
          else
            echo "No lint script."
          fi

      - name: Test
        run: |
          if [ -f package.json ] && node -e "process.exit(require('./package.json').scripts?.test?0:1)"; then
            echo "Running tests..."
            (npm test -- --ci || npm test)
          else
            echo "No test script; skipping."
          fi

      - name: Build
        run: |
          if [ -f package.json ] && node -e "process.exit(require('./package.json').scripts?.build?0:1)"; then
            npm run build
          else
            echo "No build script."
          fi

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.node-version }}
          path: |
            dist
            build
          if-no-files-found: ignore